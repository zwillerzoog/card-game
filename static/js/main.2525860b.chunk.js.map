{"version":3,"sources":["Deck.js","actions/index.js","components/Logic.jsx","reducers/index.js","store.js","components/MainNav.jsx","components/Word.jsx","components/Cards.jsx","components/UserNav.jsx","components/Navigation.jsx","components/Table.jsx","components/Game.jsx","Router.js","Layout.jsx","index.js"],"names":["deck","values","A","B","C","D","E","ER","F","G","H","I","IN","J","K","L","M","N","O","P","Q","QU","R","S","T","TH","U","V","W","X","Y","Z","deal","round","type","updateWord","word","score","updateHand","hand","randomize","array","times","newArr","i","randomLetter","Math","floor","random","length","includes","push","arrayWithout","index","indexOf","splice","positionCard","e","middleOfLast","obj","target","childNodes","key","middle","offsetWidth","offsetLeft","clientX","innerHTML","console","log","wordScore","map","a","b","initialState","reducers","state","arguments","undefined","action","Object","objectSpread","store","createStore","li","marginLeft","marginRight","textDecoration","MainNav","react_default","createElement","style","listStyle","display","href","Word","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this2","onClick","selectCard","React","Component","Hand","connect","_React$Component","discard","selected","bind","assertThisInitialized","submit","inherits","createClass","value","dispatch","parent","parentNode","className","setState","slice","unshift","concat","toConsumableArray","left","width","marginTop","addCard","ul","position","right","color","fontWeight","UserNav","Navigation","margin","backgroundColor","top","components_MainNav","components_UserNav","apply","span","border","borderRadius","padding","fontSize","bottom","justifyContent","Game","components_Cards","Router","react_router","path","component","Layout","components_Navigation","src_Router","ReactDOM","render","es","react_router_dom","src_Layout","document","getElementById"],"mappings":"0PACaA,EAAO,CAChB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IACpC,IAAI,IACJ,IAAI,IACJ,KAAK,KACL,IAAI,IAAI,IAAI,IACZ,IAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAC7C,KAAM,KACN,IAAI,IACJ,IAAI,IAAI,IAAI,IACZ,IAAI,IACJ,IAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAC7B,KAAK,KACL,IAAI,IACJ,IAAI,IACJ,IAAI,IAAI,IAAI,IACZ,IAAI,IACJ,IAAI,IAAI,IAAI,IAAI,IAAI,IACpB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAChC,IAAI,IACJ,IAAK,IACL,KAAM,KACN,IAAI,IAAI,IAAI,IAAI,IAAI,IACpB,IAAI,IAAI,IAAI,IACZ,IAAK,IAAI,IAAI,IAAI,IAAI,IACrB,KAAM,KACN,IAAI,IAAI,IAAI,IAAI,IAAI,IACpB,IAAI,IACJ,IAAI,IACJ,IAAI,IACJ,IAAI,IAAI,IAAI,IACZ,IAAI,KAEKC,EAAS,CACrBC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,GAAI,EACJC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,GAAI,EACJC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,GAAI,GACJC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,GAAI,EACJC,EAAG,EACHC,EAAG,EACHC,EAAG,GACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GC3DSC,EAAO,SAACC,GAAD,MAAY,CAC5BC,KANe,OAOfD,UAGSE,EAAa,SAACC,GAAD,MAAW,CACjCF,KAVe,OAWfE,OACAC,MAXiB,UAcRC,EAAa,SAACC,GAAD,MAAW,CACjCL,KAdgB,OAehBK,SClBSC,EAAY,SAACC,EAAOC,GAG7B,IAFA,IAAIC,EAAS,GACTC,EAAI,EACDA,EAAIF,GAAO,CACd,IAAIG,EAAeJ,EAAMK,KAAKC,MAAMD,KAAKE,SAASP,EAAMQ,SACpDN,EAAOO,SAASL,GAChBD,IAEAD,EAAOQ,KAAKN,GAEhBD,IAEJ,OAAOD,GAGES,EAAe,SAACX,EAAOG,GAChC,IAAIS,EAAQZ,EAAMa,QAAQV,GAE1B,OADAH,EAAMc,OAAOF,EAAO,GACbZ,GAGEe,EAAe,SAACC,GACzB,IAAIC,EACAC,EAAMF,EAAEG,OAAOC,WAEnB,GAAIJ,EAAEG,OAAOC,WAAW,IACpB,IAAK,IAAIC,KAAOH,EACZ,GAAIA,EAAIG,GAAKD,WAAY,CACrB,IAAIE,EAASJ,EAAIG,GAAKE,YAAY,EAAIL,EAAIG,GAAKG,WAC/C,GAAIP,EACA,GAAIK,EAASN,EAAES,QACXR,EAAeK,MACZ,IAAIL,EAAeD,EAAES,QAAUH,EAClC,OAAOJ,EAAIG,GAAKD,WAAW,GAAGM,UACvBT,EAAeD,EAAES,SAAWH,EAASN,EAAES,QAC9CR,EAAeK,EAEfK,QAAQC,IAAI,gCAEb,CACH,GAAIZ,EAAES,QAAUH,EACZ,OAAOJ,EAAIG,GAAKD,WAAW,GAAGM,UACvBV,EAAES,QAAUH,IACnBL,EAAeK,YCvCjCO,EAAY,SAAC7B,GACf,IAAIJ,EAAQ,EAIZ,OAHAI,EAAM8B,IAAI,SAACC,EAAGC,GACVpC,GAAgBpC,EAAOuE,KAEpBnC,GAGLqC,EAAe,CACjBnC,KAAOC,EAAUxC,EAAM,GACvBiC,MAAO,EACPG,KAAM,GACNC,MAAO,EACPpC,UA4BW0E,EAxBE,WAAkC,IAAjCC,EAAiCC,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAzBH,EAAcK,EAAWF,UAAA5B,OAAA,EAAA4B,UAAA,QAAAC,EAC/C,OAAQC,EAAO7C,MACX,IFvBW,OEwBP,OAAI0C,EAAM3C,MAAQ,EACP+C,OAAAC,EAAA,EAAAD,CAAA,GAAIJ,EAAX,CACI3C,MAAO2C,EAAM3C,MAAQ,IAElB+C,OAAAC,EAAA,EAAAD,CAAA,GAAIJ,EAAX,CACI3C,MAAO,IAEnB,IF9BW,OE+BP,OAAO+C,OAAAC,EAAA,EAAAD,CAAA,GAAIJ,EAAX,CACIxC,KAAM2C,EAAO3C,KACbC,MAAOiC,EAAUS,EAAO3C,QAEhC,IFjCY,OEkCR,OAAO4C,OAAAC,EAAA,EAAAD,CAAA,GAAIJ,EAAX,CACIrC,KAAKwC,EAAOxC,OAEpB,QACI,OAAOqC,ICrCNM,EAAQC,YAAYR,sCCW3BS,EAAK,CACPC,WAAW,GACXC,YAAa,GACbC,eAAgB,QAYLC,EATC,WACZ,OACIC,EAAAjB,EAAAkB,cAAA,MAAIC,MAAO,CAACC,UAAW,OAAQC,QAAS,SACpCJ,EAAAjB,EAAAkB,cAAA,MAAIC,MAAOP,GAAIK,EAAAjB,EAAAkB,cAAA,KAAGC,MAAOP,EAAIU,KAAM,KAApB,SACfL,EAAAjB,EAAAkB,cAAA,MAAIC,MAAOP,GAAIK,EAAAjB,EAAAkB,cAAA,KAAGC,MAAOP,EAAIU,KAAM,KAApB,2BCtBrBC,qBACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAjB,OAAAkB,EAAA,EAAAlB,CAAAmB,KAAAJ,IACfE,EAAAjB,OAAAoB,EAAA,EAAApB,CAAAmB,KAAAnB,OAAAqB,EAAA,EAAArB,CAAAe,GAAAO,KAAAH,KAAMH,KACDpB,MAAQ,GAFEqB,wEAIV,IAAAM,EAAAJ,KAEL,OADA/B,QAAQC,IAAI8B,KAAKH,OAEbP,EAAAjB,EAAAkB,cAAA,WACCS,KAAKH,MAAM5D,KAAKmC,IAAI,SAAA3B,GAAC,OAClB6C,EAAAjB,EAAAkB,cAAA,QAAM5B,IAAKlB,EAAG4D,QAAS,SAAC/C,GAAD,OAAO8C,EAAKE,WAAWhD,EAAGb,KAC7C6C,EAAAjB,EAAAkB,cAAA,WAAOa,EAAKP,MAAM/F,OAAO2C,IACzB6C,EAAAjB,EAAAkB,cAAA,SAAM9C,cAZP8D,IAAMC,YCKZC,GDmBEC,YAJS,SAACjC,GACrB,OAAOA,GAGIiC,CAAyBd,GCnBxC,SAAAe,GACI,SAAAF,EAAYZ,GAAO,IAAAC,EAAA,OAAAjB,OAAAkB,EAAA,EAAAlB,CAAAmB,KAAAS,IACfX,EAAAjB,OAAAoB,EAAA,EAAApB,CAAAmB,KAAAnB,OAAAqB,EAAA,EAAArB,CAAA4B,GAAAN,KAAAH,KAAMH,KACDpB,MAAQ,CACTrC,KAAMC,EAAUxC,EAAMiG,EAAKD,MAAM/D,OACjCG,KAAM,GACN2E,QAAS,GACTC,SAAU,IAEdf,EAAKQ,WAAaR,EAAKQ,WAAWQ,KAAhBjC,OAAAkC,EAAA,EAAAlC,CAAAiB,IAClBA,EAAKkB,OAASlB,EAAKkB,OAAOF,KAAZjC,OAAAkC,EAAA,EAAAlC,CAAAiB,IATCA,EADvB,OAAAjB,OAAAoC,EAAA,EAAApC,CAAA4B,EAAAE,GAAA9B,OAAAqC,EAAA,EAAArC,CAAA4B,EAAA,EAAA9C,IAAA,oBAAAwD,MAAA,WAcQnB,KAAKH,MAAMuB,SAASvF,EAAKmE,KAAKH,MAAM/D,QACpCmC,QAAQC,IAAI,mBAAoB8B,KAAKvB,SAf7C,CAAAd,IAAA,aAAAwD,MAAA,SAkBgB7D,EAAGb,GACX,IAAI4E,EAAS/D,EAAEG,OAAO6D,WAAWC,UAC7BvB,KAAKvB,MAAMoC,SACX5C,QAAQC,IAAI,2BACM,SAAXmD,GACPpD,QAAQC,IAAI,QACZ8B,KAAKH,MAAMuB,SAASjF,EAAWc,EAAa+C,KAAKH,MAAMzD,KAAMK,KAC7DuD,KAAKwB,SAAS,CACVX,SAASpE,KAEG,SAAX4E,IACLpD,QAAQC,IAAI,QACZ8B,KAAKH,MAAMuB,SAASpF,EAAWiB,EAAa+C,KAAKH,MAAM5D,KAAMQ,KAC7DuD,KAAKwB,SAAS,CACVX,SAASpE,OAhCzB,CAAAkB,IAAA,UAAAwD,MAAA,SAqCa7D,GACL,IAAId,EAASwD,KAAKH,MAAM5D,KAAKwF,QAC7B,GAAIzB,KAAKvB,MAAMoC,SACX,GAA2B,SAAvBvD,EAAEG,OAAO8D,UAAsB,CAC9B,GAAIlE,EAAaC,GACb,GAAID,EAAaC,KAAOd,EAAO,GAC3BA,EAAOkF,QAAQ1B,KAAKvB,MAAMoC,cACvB,CACH,IAAI3D,EAAQV,EAAOW,QAAQE,EAAaC,IACxCd,EAAOY,OAAOF,EAAO,EAAG8C,KAAKvB,MAAMoC,eAGvCrE,EAAOQ,KAAKgD,KAAKvB,MAAMoC,UAE3Bb,KAAKH,MAAMuB,SAASpF,EAAWQ,IAChCwD,KAAKwB,SAAS,CACVvF,KAAMO,EACNqE,SAAU,SAEc,SAAvBvD,EAAEG,OAAO8D,YACdvB,KAAKH,MAAMuB,SAASjF,EAAU,GAAAwF,OAAA9C,OAAA+C,EAAA,EAAA/C,CAAKmB,KAAKH,MAAMzD,MAAhB,CAAsB4D,KAAKvB,MAAMoC,aAC/Db,KAAKwB,SAAS,CACVX,SAAU,QA3D9B,CAAAlD,IAAA,SAAAwD,MAAA,WAmEYnB,KAAKwB,SAAS,CACVpF,KAAMC,EAAUxC,EAAMmG,KAAKH,MAAM/D,OACjC+F,KAAMxF,EAAUxC,EAAMmG,KAAKH,MAAM/D,OACjC8E,QAAS,GACT3E,KAAM,GACN4E,SAAU,KAGdb,KAAKH,MAAMuB,SAASvF,EAAKmE,KAAKH,MAAM/D,UA3EhD,CAAA6B,IAAA,SAAAwD,MAAA,WA+Ea,IAAAf,EAAAJ,KACL,OACIV,EAAAjB,EAAAkB,cAAA,OAAKC,MAAO,CAACsC,MAAO,OAAQC,UAAW,QACnCzC,EAAAjB,EAAAkB,cAAA,mBACAD,EAAAjB,EAAAkB,cAAA,OAAKgC,UAAU,OAAOlB,QAAS,SAAA/C,GAAC,OAAI8C,EAAK4B,QAAQ1E,KAC3C0C,KAAKH,MAAMzD,KAAKgC,IAAI,SAAA3B,GACd,OACI6C,EAAAjB,EAAAkB,cAAA,QAAM5B,IAAKlB,EAAG8E,UAAU,OAAOlB,QAAS,SAAC/C,GAAD,OAAO8C,EAAKE,WAAWhD,EAAGb,KAC7D6C,EAAAjB,EAAAkB,cAAA,WAAOa,EAAKP,MAAM/F,OAAO2C,IAC1B6C,EAAAjB,EAAAkB,cAAA,SAAK9C,OAKzB6C,EAAAjB,EAAAkB,cAAA,0BACAD,EAAAjB,EAAAkB,cAAA,OAAKgC,UAAU,OAAOlB,QAAS,SAAA/C,GAAC,OAAI8C,EAAK4B,QAAQ1E,KAC5C0C,KAAKH,MAAM5D,KAAKmC,IAAI,SAAA3B,GAAC,OACd6C,EAAAjB,EAAAkB,cAAA,QAAM5B,IAAKlB,EAAG4D,QAAS,SAAC/C,GAAD,OAAO8C,EAAKE,WAAWhD,EAAGb,KACzD6C,EAAAjB,EAAAkB,cAAA,WAAOa,EAAKP,MAAM/F,OAAO2C,IACzB6C,EAAAjB,EAAAkB,cAAA,SAAM9C,OAIV6C,EAAAjB,EAAAkB,cAAA,UAAQc,QAASL,KAAKgB,QAAtB,eAtGhBP,EAAA,CAA0BF,IAAMC,YAgHjBE,cAJS,SAACjC,GACrB,OAAOA,GAGIiC,CAAyBD,GCpHlCwB,EAAK,CACPxC,UAAW,OACXC,QAAS,OACTwC,SAAU,QACVC,MAAO,GAELlD,EAAK,CACPC,WAAW,GACXC,YAAa,GACbC,eAAgB,OAChBgD,MAAO,QACPC,WAAY,UAGVC,mLAEE,OACIhD,EAAAjB,EAAAkB,cAAA,MAAIC,MAAOyC,GACP3C,EAAAjB,EAAAkB,cAAA,MAAIC,MAAOP,GAAIK,EAAAjB,EAAAkB,cAAA,KAAGC,MAAOP,EAAIU,KAAM,KAApB,UAAiCK,KAAKH,MAAM3D,QAC3DoD,EAAAjB,EAAAkB,cAAA,MAAIC,MAAOP,GAAIK,EAAAjB,EAAAkB,cAAA,KAAGC,MAAOP,EAAIU,KAAM,KAApB,qBALTY,IAAMC,WAebE,cAJS,SAACjC,GACrB,OAAOA,GAGIiC,CAAyB4B,GCTzBC,EApBI,WAYf,OACGjD,EAAAjB,EAAAkB,cAAA,OAAKC,MAXM,CACVC,UAAW,OACXC,QAAS,OACT8C,OAAQ,EACRC,gBAAgB,UAChBP,SAAU,QACVQ,IAAK,EACLb,KAAM,EACNM,MAAO,IAIJ7C,EAAAjB,EAAAkB,cAACoD,EAAD,MACArD,EAAAjB,EAAAkB,cAACqD,EAAD,gBChBEnC,EAAb,SAAAE,GAAA,SAAAF,IAAA,OAAA5B,OAAAkB,EAAA,EAAAlB,CAAAmB,KAAAS,GAAA5B,OAAAoB,EAAA,EAAApB,CAAAmB,KAAAnB,OAAAqB,EAAA,EAAArB,CAAA4B,GAAAoC,MAAA7C,KAAAtB,YAAA,OAAAG,OAAAoC,EAAA,EAAApC,CAAA4B,EAAAE,GAAA9B,OAAAqC,EAAA,EAAArC,CAAA4B,EAAA,EAAA9C,IAAA,SAAAwD,MAAA,WAEQlD,QAAQC,IAAI8B,KAAKH,OACjB,IAAMiD,EAAO,CACTC,OAAQ,iBACRC,aAAc,EACdC,QAAS,YACTT,OAAQ,EACRU,SAAU,IAWd,OACI5D,EAAAjB,EAAAkB,cAAA,OAAKC,MATG,CACR0C,SAAS,WACTJ,MAAO,OACPqB,OAAQ,MACRzD,QAAS,OACT0D,eAAgB,WAKZ9D,EAAAjB,EAAAkB,cAAA,QAAMC,MAAOsD,GAAO9C,KAAKH,MAAMzD,KAAK,IACpCkD,EAAAjB,EAAAkB,cAAA,QAAMC,MAAOsD,GAAO9C,KAAKH,MAAMzD,KAAK,IACpCkD,EAAAjB,EAAAkB,cAAA,QAAMC,MAAOsD,GAAO9C,KAAKH,MAAMzD,KAAK,SAvBpDqE,EAAA,CAA0BF,IAAMC,WCGnB6C,GD+BE3C,YAJS,SAACjC,GACrB,OAAOA,GAGIiC,CAAyBD,SC/BxC,SAAAE,GAAA,SAAA0C,IAAA,OAAAxE,OAAAkB,EAAA,EAAAlB,CAAAmB,KAAAqD,GAAAxE,OAAAoB,EAAA,EAAApB,CAAAmB,KAAAnB,OAAAqB,EAAA,EAAArB,CAAAwE,GAAAR,MAAA7C,KAAAtB,YAAA,OAAAG,OAAAoC,EAAA,EAAApC,CAAAwE,EAAA1C,GAAA9B,OAAAqC,EAAA,EAAArC,CAAAwE,EAAA,EAAA1F,IAAA,SAAAwD,MAAA,WAEQ,OACI7B,EAAAjB,EAAAkB,cAAA,WACID,EAAAjB,EAAAkB,cAAC+D,EAAD,WAJhBD,EAAA,CAA0B9C,IAAMC,YAiBjBE,cAJS,SAACjC,GACrB,OAAOA,GAGIiC,CAAyB2C,GCVzBE,EARA,kBACXjE,EAAAjB,EAAAkB,cAAA,WACID,EAAAjB,EAAAkB,cAACiE,EAAA,EAAD,KACIlE,EAAAjB,EAAAkB,cAACiE,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWL,OCOxBM,mLATP,OACIrE,EAAAjB,EAAAkB,cAAA,OAAKgC,UAAY,aACbjC,EAAAjB,EAAAkB,cAACqE,EAAD,MACAtE,EAAAjB,EAAAkB,cAACsE,EAAD,cALKtD,IAAMC,WCI3BsD,IAASC,OACLzE,EAAAjB,EAAAkB,cAACyE,EAAA,EAAD,CAAUjF,MAAOA,GACbO,EAAAjB,EAAAkB,cAAC0E,EAAA,EAAD,KACI3E,EAAAjB,EAAAkB,cAAC2E,EAAD,QAIRC,SAASC,eAAe","file":"static/js/main.2525860b.chunk.js","sourcesContent":["\r\nexport const deck = [\r\n    'A','A','A','A','A','A','A','A','A','A',\r\n    'B','B',\r\n    'C','C',\r\n    'CL','CL',\r\n    'D','D','D','D',\r\n    'E', 'E','E','E','E','E','E','E','E','E','E','E',\r\n    'ER', 'ER',\r\n    'F','F',\r\n    'G','G','G','G',\r\n    'H','H',\r\n    'I', 'I','I','I','I','I','I','I',\r\n    'IN','IN',\r\n    'J','J',\r\n    'K','K',\r\n    'L','L','L','L',\r\n    'M','M',\r\n    'N','N','N','N','N','N',\r\n    'O','O','O','O','O','O','O','O','O',\r\n    'P','P',\r\n    'Q', 'Q',\r\n    'QU', 'QU',\r\n    'R','R','R','R','R','R',\r\n    'S','S','S','S',\r\n    'T', 'T','T','T','T','T',\r\n    'TH', 'TH',\r\n    'U','U','U','U','U','U',\r\n    'V','V',\r\n    'W','W',\r\n    'X','X',\r\n    'Y','Y','Y','Y',\r\n    'Z','Z'\r\n];\r\nexport const values = {\r\n A: 2,\r\n B: 0,\r\n C: 0,\r\n D: 5,\r\n E: 2,\r\n ER: 7,\r\n F: 6,\r\n G: 6,\r\n H: 7,\r\n I: 2,\r\n IN: 7,\r\n J: 6,\r\n K: 0,\r\n L: 0,\r\n M: 5,\r\n N: 5,\r\n O: 4,\r\n P: 0,\r\n Q: 0,\r\n QU: 15,\r\n R: 5,\r\n S: 4,\r\n T: 3,\r\n TH: 0,\r\n U: 4,\r\n V: 0,\r\n W: 10,\r\n X: 0,\r\n Y: 0,\r\n Z: 0\r\n};\r\n","export const DEAL= \"DEAL\";\r\nexport const WORD= \"WORD\";\r\nexport const SCORE = \"SCORE\";\r\nexport const HAND = 'HAND';\r\n\r\nexport const deal = (round) => ({\r\n    type: DEAL,\r\n    round\r\n});\r\n\r\nexport const updateWord = (word) => ({\r\n    type: WORD,\r\n    word,\r\n    score: SCORE\r\n});\r\n\r\nexport const updateHand = (hand) => ({\r\n    type: HAND,\r\n    hand\r\n})","export const randomize = (array, times) => {\r\n    let newArr = [];\r\n    let i = 0;\r\n    while (i < times) {\r\n        let randomLetter = array[Math.floor(Math.random()*array.length)];\r\n        if (newArr.includes(randomLetter)) {\r\n            i--;\r\n        } else {\r\n            newArr.push(randomLetter)\r\n        }\r\n        i++;\r\n    }\r\n    return newArr;\r\n};\r\n\r\nexport const arrayWithout = (array, i) => {\r\n    let index = array.indexOf(i);\r\n    array.splice(index, 1);\r\n    return array;\r\n};\r\n\r\nexport const positionCard = (e) =>  {\r\n    let middleOfLast;\r\n    let obj = e.target.childNodes;\r\n    let finalCard;\r\n    if (e.target.childNodes[0]) {\r\n        for (let key in obj) {\r\n            if (obj[key].childNodes) {\r\n                let middle = obj[key].offsetWidth/2 + obj[key].offsetLeft;\r\n                if (middleOfLast) {\r\n                    if (middle < e.clientX) {\r\n                        middleOfLast = middle;\r\n                    } else if (middleOfLast < e.clientX < middle) {\r\n                        return obj[key].childNodes[1].innerHTML;\r\n                    } else if (middleOfLast < e.clientX && middle < e.clientX) {\r\n                        middleOfLast = middle;\r\n                    } else {\r\n                        console.log('it did not work ya dummy')\r\n                    }\r\n                } else {\r\n                    if (e.clientX < middle) {\r\n                        return obj[key].childNodes[1].innerHTML;\r\n                    } else if (e.clientX > middle) {\r\n                        middleOfLast = middle;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return finalCard\r\n    }\r\n};","import {deck, values} from '../Deck';\r\nimport {DEAL, WORD, HAND} from '../actions'\r\nimport {randomize} from '../components/Logic'\r\n\r\nconst wordScore = (array) => {\r\n    let score = 0;\r\n    array.map((a, b) => {\r\n        score = score + values[a];\r\n    });\r\n    return score;\r\n}\r\n\r\nconst initialState = {\r\n    hand:  randomize(deck, 3),\r\n    round: 3,\r\n    word: [],\r\n    score: 0,\r\n    values\r\n};\r\n\r\n\r\nconst reducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case DEAL:\r\n            if (state.round < 8) {\r\n                return {...state,\r\n                    round: state.round + 1};\r\n            } else {\r\n                return {...state,\r\n                    round: 3};\r\n            }\r\n        case WORD:\r\n            return {...state,\r\n                word: action.word,\r\n                score: wordScore(action.word)\r\n            };\r\n        case HAND:\r\n            return {...state,\r\n                hand:action.hand\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducers;","import { createStore } from 'redux';\r\nimport { logger } from 'redux-logger';\r\nimport reducers from './reducers';\r\n\r\nexport const store = createStore(reducers);","import React from 'react';\r\n\r\n\r\nconst ul = {\r\n    padding: 10,\r\n    listStyle: \"none\",\r\n    display: \"flex\",\r\n    margin: 0,\r\n    // backgroundColor:\"#9bd6ff\",\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0\r\n};\r\n\r\nconst li = {\r\n    marginLeft:20,\r\n    marginRight: 20,\r\n    textDecoration: \"none\"\r\n};\r\n\r\nconst MainNav = () => {\r\n    return (\r\n        <ul style={{listStyle: \"none\", display: \"flex\"}}>\r\n            <li style={li}><a style={li} href={'/'}>Home</a></li>\r\n            <li style={li}><a style={li} href={'/'}>Play</a></li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default MainNav;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Word extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ''\r\n    }\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <div>\r\n            {this.props.word.map(i => (\r\n                <span key={i} onClick={(e) => this.selectCard(e, i)}>\r\n                    <div >{this.props.values[i]}</div>\r\n                    <p  >{i}</p>\r\n                </span>)\r\n            )}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Word);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport '../styles/Cards.css'\r\nimport {updateWord, updateHand, deal} from '../actions';\r\nimport {randomize, arrayWithout, positionCard} from './Logic';\r\nimport {deck} from '../Deck';\r\nimport Word from './Word'\r\n\r\nexport class Hand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hand: randomize(deck, this.props.round),\r\n            word: [],\r\n            discard: [],\r\n            selected: ''\r\n        };\r\n        this.selectCard = this.selectCard.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(deal(this.props.round));\r\n        console.log('state upon mount', this.state)\r\n    }\r\n\r\n    selectCard (e, i) {\r\n        let parent = e.target.parentNode.className;\r\n        if (this.state.selected) {\r\n            console.log('oops you already picked')\r\n        } else if (parent === 'hand') {\r\n            console.log('hand')\r\n            this.props.dispatch(updateHand(arrayWithout(this.props.hand, i)));\r\n            this.setState({\r\n                selected:i});\r\n        }\r\n        else if (parent === 'word') {\r\n            console.log('word')\r\n            this.props.dispatch(updateWord(arrayWithout(this.props.word, i)));\r\n            this.setState({\r\n                selected:i});\r\n        }\r\n    }\r\n\r\n\r\n    addCard (e) {\r\n        let newArr = this.props.word.slice();\r\n        if (this.state.selected) {\r\n            if (e.target.className === 'word') {\r\n                 if (positionCard(e)) {\r\n                     if (positionCard(e) === newArr[0]) {\r\n                         newArr.unshift(this.state.selected)\r\n                     } else {\r\n                         let index = newArr.indexOf(positionCard(e));\r\n                         newArr.splice(index, 0, this.state.selected);\r\n                     }\r\n                } else {\r\n                     newArr.push(this.state.selected)\r\n                }\r\n                 this.props.dispatch(updateWord(newArr));\r\n                this.setState({\r\n                    word: newArr,\r\n                    selected: ''});\r\n            }\r\n            else if (e.target.className === 'hand'){\r\n                this.props.dispatch(updateHand([...this.props.hand, this.state.selected]))\r\n                this.setState({\r\n                    selected: ''\r\n                });\r\n        }\r\n\r\n        }\r\n    }\r\n\r\n    submit () {\r\n            this.setState({\r\n                hand: randomize(deck, this.props.round),\r\n                left: randomize(deck, this.props.round),\r\n                discard: [],\r\n                word: [],\r\n                selected: ''\r\n            });\r\n            // this.props.dispatch(updateWord(this.state.word));\r\n            this.props.dispatch(deal(this.props.round));\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width: \"100%\", marginTop: \"20%\"}}>\r\n                <h3>Hand:</h3>\r\n                <div className='hand' onClick={e => this.addCard(e)}>\r\n                    { this.props.hand.map(i => {\r\n                            return (\r\n                                <span key={i} className='card' onClick={(e) => this.selectCard(e, i)}>\r\n                                     <div >{this.props.values[i]}</div>\r\n                                    <p >{i}</p>\r\n                                </span>)\r\n\r\n                       })}\r\n                </div>\r\n                <h3>Make a Word:</h3>\r\n                <div className=\"word\" onClick={e => this.addCard(e)}>\r\n                    {this.props.word.map(i => (\r\n                            <span key={i} onClick={(e) => this.selectCard(e, i)}>\r\n                    <div >{this.props.values[i]}</div>\r\n                    <p  >{i}</p>\r\n                </span>)\r\n                    )}\r\n                </div>\r\n                <button onClick={this.submit}>Submit</button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Hand);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Hand} from \"./Cards\";\r\n\r\nconst ul = {\r\n    listStyle: \"none\",\r\n    display: \"flex\",\r\n    position: \"fixed\",\r\n    right: 0\r\n};\r\nconst li = {\r\n    marginLeft:20,\r\n    marginRight: 20,\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n    fontWeight: \"bolder\"\r\n};\r\n\r\nclass UserNav extends React.Component {\r\n    render () {\r\n        return (\r\n            <ul style={ul}>\r\n                <li style={li}><a style={li} href={'/'}>SCORE: {this.props.score}</a></li>\r\n                <li style={li}><a style={li} href={'/'}>USERNAME</a></li>\r\n            </ul>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserNav);","import React from 'react';\r\nimport MainNav from './MainNav';\r\nimport UserNav from './UserNav'\r\n\r\nconst Navigation = () => {\r\n\r\n    const style = {\r\n        listStyle: \"none\",\r\n        display: \"flex\",\r\n        margin: 0,\r\n        backgroundColor:\"#9bd6ff\",\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0\r\n    }\r\n    return (\r\n       <div style={style}>\r\n           <MainNav/>\r\n           <UserNav/>\r\n       </div>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nexport class Hand extends React.Component {\r\n    render() {\r\n        console.log(this.props)\r\n        const span = {\r\n            border: \"2px solid gray\",\r\n            borderRadius: 5,\r\n            padding: \"30px 20px\",\r\n            margin: 5,\r\n            fontSize: 40,\r\n        };\r\n\r\n        const div = {\r\n            position:\"absolute\",\r\n            width: '100%',\r\n            bottom: \"20%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\"\r\n        };\r\n\r\n        return (\r\n            <div style={div}>\r\n                <span style={span}>{this.props.hand[0]}</span>\r\n                <span style={span}>{this.props.hand[1]}</span>\r\n                <span style={span}>{this.props.hand[2]}</span>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Hand);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Cards from './Cards';\r\nimport Table from './Table';\r\nimport '../styles/Game.css'\r\n\r\nexport class Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Cards />\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Game);","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Game from './components/Game';\r\n\r\n\r\nconst Router = () => (\r\n    <div>\r\n        <Switch>\r\n            <Route path='/' component={Game} />\r\n        </Switch>\r\n    </div>\r\n);\r\n\r\nexport default Router;","import React from 'react';\r\nimport Navigation from './components/Navigation';\r\nimport Router from './Router';\r\n\r\nclass Layout extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className = \"container\" >\r\n                <Navigation />\r\n                <Router />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import '/styles/app.css';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { store } from \"./store\";\nimport Layout from \"./Layout\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Layout />\n        </Router>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}