{"version":3,"sources":["Deck.js","actions/index.js","components/Logic.jsx","reducers/index.js","store.js","components/MainNav.jsx","components/Word.jsx","components/Cards.jsx","components/UserNav.jsx","components/Navigation.jsx","components/Table.jsx","components/Game.jsx","Router.js","Layout.jsx","index.js"],"names":["deck","values","A","B","C","D","E","ER","F","G","H","I","IN","J","K","L","M","N","O","P","Q","QU","R","S","T","TH","U","V","W","X","Y","Z","deal","round","type","updateWord","word","score","updateHand","hand","randomize","array","times","newArr","i","randomLetter","Math","floor","random","length","includes","push","arrayWithout","index","indexOf","splice","positionCard","e","middleOfLast","obj","target","childNodes","key","middle","offsetWidth","offsetLeft","clientX","innerHTML","console","log","initialState","reducers","state","arguments","undefined","action","Object","objectSpread","count","store","createStore","li","marginLeft","marginRight","textDecoration","MainNav","react_default","a","createElement","style","listStyle","display","href","Word","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this2","map","onClick","selectCard","React","Component","Hand","connect","_React$Component","selected","discardCount","bind","assertThisInitialized","submit","inherits","createClass","value","dispatch","parent","parentNode","className","setState","newLetter","slice","unshift","concat","toConsumableArray","left","discard","b","wordScore","width","marginTop","newCard","addCard","ul","position","right","color","fontWeight","UserNav","Navigation","margin","backgroundColor","top","components_MainNav","components_UserNav","apply","span","border","borderRadius","padding","fontSize","bottom","justifyContent","Game","components_Cards","Router","react_router","path","component","Layout","components_Navigation","src_Router","ReactDOM","render","es","react_router_dom","src_Layout","document","getElementById"],"mappings":"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","file":"static/js/main.51dd0cd0.chunk.js","sourcesContent":["\r\nexport const deck = [\r\n    'A','A','A','A','A','A','A','A','A','A',\r\n    'B','B',\r\n    'C','C',\r\n    'CL','CL',\r\n    'D','D','D','D',\r\n    'E', 'E','E','E','E','E','E','E','E','E','E','E',\r\n    'ER', 'ER',\r\n    'F','F',\r\n    'G','G','G','G',\r\n    'H','H',\r\n    'I', 'I','I','I','I','I','I','I',\r\n    'IN','IN',\r\n    'J','J',\r\n    'K','K',\r\n    'L','L','L','L',\r\n    'M','M',\r\n    'N','N','N','N','N','N',\r\n    'O','O','O','O','O','O','O','O','O',\r\n    'P','P',\r\n    'Q', 'Q',\r\n    'QU', 'QU',\r\n    'R','R','R','R','R','R',\r\n    'S','S','S','S',\r\n    'T', 'T','T','T','T','T',\r\n    'TH', 'TH',\r\n    'U','U','U','U','U','U',\r\n    'V','V',\r\n    'W','W',\r\n    'X','X',\r\n    'Y','Y','Y','Y',\r\n    'Z','Z'\r\n];\r\nexport const values = {\r\n A: 2,\r\n B: 0,\r\n C: 0,\r\n D: 5,\r\n E: 2,\r\n ER: 7,\r\n F: 6,\r\n G: 6,\r\n H: 7,\r\n I: 2,\r\n IN: 7,\r\n J: 6,\r\n K: 0,\r\n L: 0,\r\n M: 5,\r\n N: 5,\r\n O: 4,\r\n P: 0,\r\n Q: 0,\r\n QU: 15,\r\n R: 5,\r\n S: 4,\r\n T: 3,\r\n TH: 0,\r\n U: 4,\r\n V: 0,\r\n W: 10,\r\n X: 0,\r\n Y: 0,\r\n Z: 0\r\n};\r\n","export const DEAL= \"DEAL\";\r\nexport const WORD= \"WORD\";\r\nexport const SCORE = \"SCORE\";\r\nexport const HAND = 'HAND';\r\n\r\nexport const deal = (round) => ({\r\n    type: DEAL,\r\n    round\r\n});\r\n\r\nexport const updateWord = (word) => ({\r\n    type: WORD,\r\n    word,\r\n    score: SCORE\r\n});\r\n\r\nexport const updateHand = (hand) => ({\r\n    type: HAND,\r\n    hand\r\n});\r\n\r\nexport const submitScore = (score, count) => ({\r\n    type:SCORE,\r\n    score,\r\n    count\r\n})","import {values} from \"../Deck\";\r\n\r\nexport const randomize = (array, times) => {\r\n    let newArr = [];\r\n    let i = 0;\r\n    while (i < times) {\r\n        let randomLetter = array[Math.floor(Math.random()*array.length)];\r\n        if (newArr.includes(randomLetter)) {\r\n            i--;\r\n        } else {\r\n            newArr.push(randomLetter)\r\n        }\r\n        i++;\r\n    }\r\n    return newArr;\r\n};\r\n\r\nexport const arrayWithout = (array, i) => {\r\n    let index = array.indexOf(i);\r\n    array.splice(index, 1);\r\n    return array;\r\n};\r\n\r\nexport const positionCard = (e) =>  {\r\n    let middleOfLast;\r\n    let obj = e.target.childNodes;\r\n    let finalCard;\r\n    if (e.target.childNodes[0]) {\r\n        for (let key in obj) {\r\n            if (obj[key].childNodes) {\r\n                let middle = obj[key].offsetWidth/2 + obj[key].offsetLeft;\r\n                if (middleOfLast) {\r\n                    if (middle < e.clientX) {\r\n                        middleOfLast = middle;\r\n                    } else if (middleOfLast < e.clientX < middle) {\r\n                        return obj[key].childNodes[1].innerHTML;\r\n                    } else if (middleOfLast < e.clientX && middle < e.clientX) {\r\n                        middleOfLast = middle;\r\n                    } else {\r\n                        console.log('it did not work ya dummy')\r\n                    }\r\n                } else {\r\n                    if (e.clientX < middle) {\r\n                        return obj[key].childNodes[1].innerHTML;\r\n                    } else if (e.clientX > middle) {\r\n                        middleOfLast = middle;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return finalCard\r\n    }\r\n};\r\n\r\nexport const wordScore = (array) => {\r\n    let score = 0;\r\n    array.map((a, b) => {\r\n        score = score + values[a];\r\n    });\r\n    console.log('score', score)\r\n    return score;\r\n}","import {deck, values} from '../Deck';\r\nimport {DEAL, WORD, HAND, SCORE} from '../actions'\r\nimport {randomize} from '../components/Logic'\r\n\r\n\r\n\r\nconst initialState = {\r\n    hand:  randomize(deck, 3),\r\n    round: 3,\r\n    word: [],\r\n    score: 0,\r\n    values\r\n};\r\n\r\n\r\nconst reducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case DEAL:\r\n            if (state.round < 8) {\r\n                return {...state,\r\n                    round: state.round + 1};\r\n            } else {\r\n                return {...state,\r\n                    round: 3};\r\n            }\r\n        case WORD:\r\n            console.log('mew', state.score)\r\n            return {...state,\r\n                word: action.word\r\n            };\r\n        case HAND:\r\n            return {...state,\r\n                hand:action.hand\r\n            };\r\n        case SCORE:\r\n\r\n            return {...state,\r\n                score: state.score + action.score - action.count\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducers;","import { createStore } from 'redux';\r\nimport { logger } from 'redux-logger';\r\nimport reducers from './reducers';\r\n\r\nexport const store = createStore(reducers);","import React from 'react';\r\n\r\n\r\nconst ul = {\r\n    padding: 10,\r\n    listStyle: \"none\",\r\n    display: \"flex\",\r\n    margin: 0,\r\n    // backgroundColor:\"#9bd6ff\",\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0\r\n};\r\n\r\nconst li = {\r\n    marginLeft:20,\r\n    marginRight: 20,\r\n    textDecoration: \"none\"\r\n};\r\n\r\nconst MainNav = () => {\r\n    return (\r\n        <ul style={{listStyle: \"none\", display: \"flex\"}}>\r\n            <li style={li}><a style={li} href={'/'}>Home</a></li>\r\n            <li style={li}><a style={li} href={'/'}>Play</a></li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default MainNav;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Word extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ''\r\n    }\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <div>\r\n            {this.props.word.map(i => (\r\n                <span key={i} onClick={(e) => this.selectCard(e, i)}>\r\n                    <div >{this.props.values[i]}</div>\r\n                    <p  >{i}</p>\r\n                </span>)\r\n            )}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Word);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport '../styles/Cards.css'\r\nimport {updateWord, updateHand, deal, submitScore} from '../actions';\r\nimport {randomize, arrayWithout, positionCard, wordScore} from './Logic';\r\nimport {deck} from '../Deck';\r\nimport Word from './Word'\r\n\r\nexport class Hand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: '',\r\n            discardCount: 0\r\n        };\r\n        this.selectCard = this.selectCard.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(deal(this.props.round));\r\n        console.log('state upon mount', this.state)\r\n    }\r\n\r\n    selectCard (e, i) {\r\n        let parent = e.target.parentNode.className;\r\n        if (this.state.selected) {\r\n            console.log('oops you already picked')\r\n        } else if (parent === 'hand') {\r\n            console.log('hand')\r\n            this.props.dispatch(updateHand(arrayWithout(this.props.hand, i)));\r\n            this.setState({\r\n                selected:i});\r\n        }\r\n        else if (parent === 'word') {\r\n            console.log('word')\r\n            this.props.dispatch(updateWord(arrayWithout(this.props.word, i)));\r\n            this.setState({\r\n                selected:i});\r\n        }\r\n    }\r\n\r\n    newCard () {\r\n        if (this.state.selected === '') {\r\n            console.log('ya girl cheatin')\r\n        } else {\r\n            let newLetter = randomize(deck, 1)\r\n            let newArr = this.props.hand.slice();\r\n            let index = newArr.indexOf(this.state.selected);\r\n\r\n            newArr.push(newLetter);\r\n            this.setState({\r\n                selected: '',\r\n                discardCount: this.state.discardCount +1\r\n            });\r\n            console.log('discard count', this.state.discardCount)\r\n            this.props.dispatch(updateHand(newArr));\r\n\r\n            return newArr;\r\n        }\r\n\r\n    }\r\n\r\n    addCard (e) {\r\n        let newArr = this.props.word.slice();\r\n        if (this.state.selected) {\r\n            if (e.target.className === 'word') {\r\n                 if (positionCard(e)) {\r\n                     if (positionCard(e) === newArr[0]) {\r\n                         newArr.unshift(this.state.selected)\r\n                     } else {\r\n                         let index = newArr.indexOf(positionCard(e));\r\n                         newArr.splice(index, 0, this.state.selected);\r\n                     }\r\n                } else {\r\n                     newArr.push(this.state.selected)\r\n                }\r\n                 this.props.dispatch(updateWord(newArr));\r\n                 this.setState({\r\n                    word: newArr,\r\n                    selected: ''});\r\n            }\r\n            else if (e.target.className === 'hand'){\r\n                this.props.dispatch(updateHand([...this.props.hand, this.state.selected]))\r\n                this.setState({\r\n                    selected: ''\r\n                });\r\n        }\r\n\r\n        }\r\n    }\r\n\r\n    submit () {\r\n        let empty = [];\r\n            this.setState({\r\n                hand: randomize(deck, this.props.round),\r\n                left: randomize(deck, this.props.round),\r\n                discard: [],\r\n                word: [],\r\n                selected: ''\r\n            });\r\n            console.log('before', this.props);\r\n            this.props.dispatch(submitScore(wordScore(this.props.word), this.state.discardCount));\r\n            this.props.dispatch(updateHand(randomize(deck, this.props.round)));\r\n            this.props.dispatch(updateWord(empty));\r\n            this.props.dispatch(deal(this.props.round));\r\n            // console.log('after'. this.props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width: \"100%\", marginTop: \"20%\"}}>\r\n\r\n                <h3>Hand:</h3>\r\n                <button onClick={e => this.newCard(e)}>Discard this letter and give me another please!</button>\r\n                <p>The more you use this, the less points you get</p>\r\n                <div className='hand' onClick={e => this.addCard(e)}>\r\n                    { this.props.hand.map(i => {\r\n                            return (\r\n                                <span key={i} className='card' onClick={(e) => this.selectCard(e, i)}>\r\n                                     <div >{this.props.values[i]}</div>\r\n                                    <p >{i}</p>\r\n                                </span>)\r\n\r\n                       })}\r\n                </div>\r\n                <h3>Make a Word:</h3>\r\n                <div className=\"word\" onClick={e => this.addCard(e)}>\r\n                    {this.props.word.map(i => (\r\n                            <span key={i} onClick={(e) => this.selectCard(e, i)}>\r\n                    <div >{this.props.values[i]}</div>\r\n                    <p  >{i}</p>\r\n                </span>)\r\n                    )}\r\n                </div>\r\n                <button onClick={this.submit}>Submit</button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Hand);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Hand} from \"./Cards\";\r\n\r\nconst ul = {\r\n    listStyle: \"none\",\r\n    display: \"flex\",\r\n    position: \"fixed\",\r\n    right: 0\r\n};\r\nconst li = {\r\n    marginLeft:20,\r\n    marginRight: 20,\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n    fontWeight: \"bolder\"\r\n};\r\n\r\nclass UserNav extends React.Component {\r\n    render () {\r\n        return (\r\n            <ul style={ul}>\r\n                <li style={li}><a style={li} href={'/'}>SCORE: {this.props.score}</a></li>\r\n                <li style={li}><a style={li} href={'/'}>USERNAME</a></li>\r\n            </ul>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserNav);","import React from 'react';\r\nimport MainNav from './MainNav';\r\nimport UserNav from './UserNav'\r\n\r\nconst Navigation = () => {\r\n\r\n    const style = {\r\n        listStyle: \"none\",\r\n        display: \"flex\",\r\n        margin: 0,\r\n        backgroundColor:\"#9bd6ff\",\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0\r\n    }\r\n    return (\r\n       <div style={style}>\r\n           <MainNav/>\r\n           <UserNav/>\r\n       </div>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nexport class Hand extends React.Component {\r\n    render() {\r\n        console.log(this.props)\r\n        const span = {\r\n            border: \"2px solid gray\",\r\n            borderRadius: 5,\r\n            padding: \"30px 20px\",\r\n            margin: 5,\r\n            fontSize: 40,\r\n        };\r\n\r\n        const div = {\r\n            position:\"absolute\",\r\n            width: '100%',\r\n            bottom: \"20%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\"\r\n        };\r\n\r\n        return (\r\n            <div style={div}>\r\n                <span style={span}>{this.props.hand[0]}</span>\r\n                <span style={span}>{this.props.hand[1]}</span>\r\n                <span style={span}>{this.props.hand[2]}</span>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Hand);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Cards from './Cards';\r\nimport Table from './Table';\r\nimport '../styles/Game.css'\r\n\r\nexport class Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Cards />\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Game);","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Game from './components/Game';\r\n\r\n\r\nconst Router = () => (\r\n    <div>\r\n        <Switch>\r\n            <Route path='/' component={Game} />\r\n        </Switch>\r\n    </div>\r\n);\r\n\r\nexport default Router;","import React from 'react';\r\nimport Navigation from './components/Navigation';\r\nimport Router from './Router';\r\n\r\nclass Layout extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className = \"container\" >\r\n                <Navigation />\r\n                <Router />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import '/styles/app.css';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { store } from \"./store\";\nimport Layout from \"./Layout\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Layout />\n        </Router>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}