{"version":3,"sources":["Deck.js","actions/index.js","components/Logic.jsx","reducers/index.js","store.js","components/MainNav.jsx","components/Cards.jsx","components/UserNav.jsx","components/Navigation.jsx","components/Table.jsx","components/Game.jsx","Router.js","Layout.jsx","index.js"],"names":["deck","values","A","B","C","D","E","ER","F","G","H","I","IN","J","K","L","M","N","O","P","Q","QU","R","S","T","TH","U","V","W","X","Y","Z","deal","round","type","updateWord","word","score","updateHand","hand","submitScore","count","selected","displayP","randomize","array","times","newArr","i","randomLetter","Math","floor","random","length","includes","push","arrayWithout","index","indexOf","splice","positionCard","e","middleOfLast","obj","target","childNodes","key","middle","offsetWidth","offsetLeft","clientX","innerHTML","console","log","initialState","discardCount","reducers","state","arguments","undefined","action","Object","objectSpread","store","createStore","MainNav","react_default","a","createElement","className","href","Cards","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selectCard","bind","assertThisInitialized","newCard","addCard","addSpace","submit","inherits","createClass","value","dispatch","parent","parentNode","newLetter","slice","discard","unshift","concat","toConsumableArray","map","b","wordScore","_this2","style","marginTop","marginLeft","marginRight","onClick","onMouseEnter","onMouseLeave","display","React","Component","connect","UserNav","Navigation","components_MainNav","components_UserNav","Hand","apply","span","border","borderRadius","padding","margin","fontSize","position","width","bottom","justifyContent","Game","components_Cards","Router","react_router","path","component","Layout","src_components_Navigation","src_Router","ReactDOM","render","es","react_router_dom","src_Layout","document","getElementById"],"mappings":"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","file":"static/js/main.d62d511f.chunk.js","sourcesContent":["\r\nexport const deck = [\r\n    'A','A','A','A','A','A','A','A','A','A',\r\n    'B','B',\r\n    'C','C',\r\n    'CL','CL',\r\n    'D','D','D','D',\r\n    'E', 'E','E','E','E','E','E','E','E','E','E','E',\r\n    'ER', 'ER',\r\n    'F','F',\r\n    'G','G','G','G',\r\n    'H','H',\r\n    'I', 'I','I','I','I','I','I','I',\r\n    'IN','IN',\r\n    'J','J',\r\n    'K','K',\r\n    'L','L','L','L',\r\n    'M','M',\r\n    'N','N','N','N','N','N',\r\n    'O','O','O','O','O','O','O','O','O',\r\n    'P','P',\r\n    'Q', 'Q',\r\n    'QU', 'QU',\r\n    'R','R','R','R','R','R',\r\n    'S','S','S','S',\r\n    'T', 'T','T','T','T','T',\r\n    'TH', 'TH',\r\n    'U','U','U','U','U','U',\r\n    'V','V',\r\n    'W','W',\r\n    'X','X',\r\n    'Y','Y','Y','Y',\r\n    'Z','Z'\r\n];\r\nexport const values = {\r\n A: 2,\r\n B: 0,\r\n C: 0,\r\n D: 5,\r\n E: 2,\r\n ER: 7,\r\n F: 6,\r\n G: 6,\r\n H: 7,\r\n I: 2,\r\n IN: 7,\r\n J: 6,\r\n K: 0,\r\n L: 0,\r\n M: 5,\r\n N: 5,\r\n O: 4,\r\n P: 0,\r\n Q: 0,\r\n QU: 15,\r\n R: 5,\r\n S: 4,\r\n T: 3,\r\n TH: 0,\r\n U: 4,\r\n V: 0,\r\n W: 10,\r\n X: 0,\r\n Y: 0,\r\n Z: 0\r\n};\r\n","export const DEAL = \"DEAL\";\r\nexport const WORD = \"WORD\";\r\nexport const SCORE = \"SCORE\";\r\nexport const HAND = 'HAND';\r\nexport const SELECTED = 'SELECTED';\r\nexport const DISCARD = 'DISCARD';\r\nexport const DISPLAYP = 'DISPLAYP';\r\n\r\nexport const deal = (round) => ({\r\n    type: DEAL,\r\n    round\r\n});\r\n\r\nexport const updateWord = (word) => ({\r\n    type: WORD,\r\n    word,\r\n    score: SCORE\r\n});\r\n\r\nexport const updateHand = (hand) => ({\r\n    type: HAND,\r\n    hand\r\n});\r\n\r\nexport const submitScore = (score, count) => ({\r\n    type:SCORE,\r\n    score,\r\n    count\r\n});\r\n\r\nexport const selected = (selected) => ({\r\n    type:SELECTED,\r\n    selected\r\n});\r\n\r\nexport const discard = (selected, discard, hand) => ({\r\n    type:DISCARD,\r\n    selected,\r\n    discard,\r\n    hand\r\n});\r\n\r\nexport const displayP = (displayP) => ({\r\n    type:DISPLAYP,\r\n    displayP\r\n});\r\n\r\n","import {values} from \"../Deck\";\r\n\r\nexport const randomize = (array, times) => {\r\n    let newArr = [];\r\n    let i = 0;\r\n    while (i < times) {\r\n        let randomLetter = array[Math.floor(Math.random()*array.length)];\r\n        if (newArr.includes(randomLetter)) {\r\n            i--;\r\n        } else {\r\n            newArr.push(randomLetter)\r\n        }\r\n        i++;\r\n    }\r\n    return newArr;\r\n};\r\n\r\nexport const arrayWithout = (array, i) => {\r\n    let index = array.indexOf(i);\r\n    array.splice(index, 1);\r\n    return array;\r\n};\r\n\r\n\r\nexport const positionCard = (e) =>  {\r\n    let middleOfLast;\r\n    let obj = e.target.childNodes;\r\n    let finalCard;\r\n    if (e.target.childNodes[0]) {\r\n\r\n        for (let key in obj) {\r\n            if (obj[key].childNodes) {\r\n                let middle = obj[key].offsetWidth/2 + obj[key].offsetLeft;\r\n                if (middleOfLast) {\r\n                    if (middle < e.clientX) {\r\n                        middleOfLast = middle;\r\n                    } else if (middleOfLast < e.clientX < middle) {\r\n                        return obj[key].childNodes[1].innerHTML;\r\n                    } else if (middleOfLast < e.clientX && middle < e.clientX) {\r\n                        middleOfLast = middle;\r\n                    } else {\r\n                        console.log('it did not work ya dummy')\r\n                    }\r\n                } else {\r\n                    if (e.clientX < middle) {\r\n                        return obj[key].childNodes[1].innerHTML;\r\n                    } else if (e.clientX > middle) {\r\n                        middleOfLast = middle;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return finalCard\r\n    }\r\n};\r\n\r\nexport const wordScore = (array) => {\r\n    let score = 0;\r\n    array.map((a, b) => {\r\n        score = score + values[a];\r\n    });\r\n    return score;\r\n};","import {deck, values} from '../Deck';\r\nimport {DEAL, WORD, HAND, SCORE, SELECTED, DISCARD, DISPLAYP} from '../actions'\r\nimport {randomize} from '../components/Logic'\r\n\r\nconst initialState = {\r\n    hand:  randomize(deck, 3),\r\n    round: 3,\r\n    word: [],\r\n    score: 0,\r\n    selected: '',\r\n    discardCount: 0,\r\n    displayP: false,\r\n    values\r\n};\r\n\r\nconst reducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case DEAL:\r\n            if (state.round < 8) {\r\n                return {...state,\r\n                    round: state.round + 1};\r\n            } else {\r\n                return {...state,\r\n                    round: 3};\r\n            }\r\n        case WORD:\r\n            return {...state,\r\n                word: action.word\r\n            };\r\n        case HAND:\r\n            return {...state,\r\n                hand:action.hand\r\n            };\r\n        case SCORE:\r\n            return {...state,\r\n                score: state.score + action.score - action.count\r\n            };\r\n        case SELECTED:\r\n            return {...state,\r\n                selected: action.selected\r\n            };\r\n        case DISCARD:\r\n            return {...state,\r\n                selected: '',\r\n                discardCount: state.discardCount + 1,\r\n                hand: action.hand\r\n            };\r\n        case DISPLAYP:\r\n            return {...state,\r\n                displayP: action.displayP\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducers;","import { createStore } from 'redux';\r\nimport { logger } from 'redux-logger';\r\nimport reducers from './reducers';\r\n\r\nexport const store = createStore(reducers);","import React from 'react';\r\n\r\n\r\nconst ul = {\r\n    padding: 10,\r\n    listStyle: \"none\",\r\n    display: \"flex\",\r\n    margin: 0,\r\n    // backgroundColor:\"#9bd6ff\",\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0\r\n};\r\n\r\nconst li = {\r\n    marginLeft:20,\r\n    marginRight: 20,\r\n    textDecoration: \"none\"\r\n};\r\n\r\nconst MainNav = () => {\r\n    return (\r\n        <ul className='mainNav' >\r\n            <li ><a href={'/'}>Home</a></li>\r\n            <li ><a href={'/'}>Play</a></li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default MainNav;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport '../styles/Cards.css'\r\nimport {updateWord, updateHand, deal, submitScore, selected, displayP, discard} from '../actions';\r\nimport {randomize, arrayWithout, positionCard, wordScore} from './Logic';\r\nimport {deck} from '../Deck';\r\nimport Hand from './Hand'\r\n\r\nexport class Cards extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.selectCard = this.selectCard.bind(this)\r\n        this.displayP = this.displayP.bind(this)\r\n        this.newCard = this.newCard.bind(this)\r\n        this.addCard = this.addCard.bind(this)\r\n        this.addSpace = this.addSpace.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(deal(this.props.round));\r\n        console.log('state upon mount', this.props)\r\n    }\r\n\r\n    displayP () {\r\n        if (this.props.displayP) {\r\n            this.props.dispatch(displayP(false))\r\n        } else {\r\n            this.props.dispatch(displayP(true))\r\n        }\r\n    }\r\n\r\n    selectCard (e, i) {\r\n        let parent = e.target.parentNode.className;\r\n        if (this.props.selected) {\r\n            console.log('oops you already picked')\r\n        } else if (parent === 'hand') {\r\n            this.props.dispatch(updateHand(arrayWithout(this.props.hand, i)));\r\n            this.props.dispatch(selected(i))\r\n        }\r\n        else if (parent === 'word') {\r\n            this.props.dispatch(updateWord(arrayWithout(this.props.word, i)));\r\n            this.props.dispatch(selected(i))\r\n        }\r\n    }\r\n\r\n    newCard () {\r\n        if (this.props.selected === '' || this.props.selected === ' ') {\r\n            console.log('ya girl cheatin');\r\n        } else {\r\n            let newLetter = randomize(deck, 1)\r\n            let newArr = this.props.hand.slice();\r\n            newArr.push(newLetter);\r\n            this.props.dispatch(discard('', this.props.discardCount + 1, newArr));\r\n            return newArr;\r\n        }\r\n\r\n    }\r\n\r\n    addCard (e) {\r\n        console.log(this.props.word, this.props.discardCount)\r\n        let newArr = this.props.word.slice();\r\n        if (this.props.selected) {\r\n            if (e.target.className === 'word') {\r\n                 if (positionCard(e)) {\r\n                     if (positionCard(e) === newArr[0]) {\r\n                         newArr.unshift(this.props.selected)\r\n                     } else {\r\n                         let index = newArr.indexOf(positionCard(e));\r\n                         newArr.splice(index, 0, this.props.selected);\r\n                     }\r\n                } else {\r\n                     newArr.push(this.props.selected)\r\n                }\r\n                this.props.dispatch(updateWord(newArr));\r\n                this.props.dispatch(selected(''))\r\n            }\r\n            else if (e.target.className === 'hand'){\r\n                this.props.dispatch(updateHand([...this.props.hand, this.props.selected]));\r\n                this.props.dispatch(selected(''))\r\n        }\r\n        }\r\n    }\r\n\r\n    addSpace (e) {\r\n        let newArr = this.props.word.slice();\r\n        newArr.push(' ');\r\n        this.props.dispatch(updateWord(newArr))\r\n    }\r\n\r\n    submit () {\r\n        let empty = [];\r\n        console.log(this.props.word, this.props.discardCount)\r\n            this.props.dispatch(submitScore(wordScore(this.props.word), this.props.discardCount));\r\n            this.props.dispatch(updateHand(randomize(deck, this.props.round)));\r\n            this.props.dispatch(updateWord(empty));\r\n            this.props.dispatch(deal(this.props.round));\r\n    }\r\n\r\n    render() {\r\n        let selected;\r\n        if (this.props.selected === ' ') {\r\n           selected = \"You selected a space\";\r\n        } else if (this.props.selected === '') {\r\n            selected = \"Select a letter!\";\r\n        } else {\r\n            selected = this.props.selected + ' is the letter you picked!';\r\n        }\r\n\r\n        return (\r\n            <div style={{marginTop: '15%', marginLeft: '15%', marginRight: '15%'}}>\r\n\r\n                <p className=\"selectedDisplay\">{selected}</p>\r\n                {/*<Hand word={this.props.word}/>*/}\r\n                <h3>Make a Word:</h3>\r\n                <button onClick={e => this.addSpace(e)}>Add a Space</button>\r\n                <div className=\"word\" onClick={e => this.addCard(e)}>\r\n                    {this.props.word.map((a,b) => (\r\n                            <span key={a} onClick={(e) => this.selectCard(e, a)}>\r\n                    <div >{this.props.values[a]}</div>\r\n                   {this.props.word[b] === ' ' ? <button className=\"deleteButton\">delete space</button> : <p>{a}</p>}\r\n                </span>)\r\n                    )}\r\n                </div>\r\n\r\n                <button onClick={this.submit} className=\"submit\">Submit</button>\r\n\r\n                <h3>Hand:</h3>\r\n                <button onClick={e => this.newCard(e)} onMouseEnter={this.displayP} onMouseLeave={this.displayP}>Discard</button>\r\n                { this.props.displayP && <p style={{display: 'inline'}}>  You lose one point each time you discard</p> }\r\n\r\n                <div className='hand' onClick={e => this.addCard(e)}>\r\n                    { this.props.hand.map(i => {\r\n                        return (\r\n                            <span key={i} className='card' onClick={(e) => this.selectCard(e, i)}>\r\n                                     <div >{this.props.values[i]}</div>\r\n                                    <p >{i}</p>\r\n                                </span>)\r\n                    })}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateHand: (arr) => {dispatch(updateHand(arr))},\r\n        updateWord: (arr) => {dispatch(updateWord(arr))},\r\n        submitScore,\r\n        deal\r\n    }\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps)(Cards);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Hand} from \"./Cards\";\r\nimport '../styles/UserNav.css';\r\n\r\nclass UserNav extends React.Component {\r\n    render () {\r\n        return (\r\n            <ul className='userNav'>\r\n                <li><a href={'/'}>SCORE: {this.props.score}</a></li>\r\n                {/*<li><a href={'/'}>USERNAME</a></li>*/}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserNav);","import React from 'react';\r\nimport MainNav from './MainNav';\r\nimport UserNav from './UserNav'\r\nimport './Navigation.css'\r\n\r\nconst Navigation = () => {\r\n\r\n    const style = {\r\n        listStyle: \"none\",\r\n        display: \"flex\",\r\n        margin: 0,\r\n        backgroundColor:\"#9bd6ff\",\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        boxShadow: '2px 0px 10px 0px cornflowerblue'\r\n    };\r\n    return (\r\n       <div className={\"navbar\"}>\r\n           <MainNav/>\r\n           <UserNav/>\r\n       </div>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nexport class Hand extends React.Component {\r\n    render() {\r\n        console.log(this.props)\r\n        const span = {\r\n            border: \"2px solid gray\",\r\n            borderRadius: 5,\r\n            padding: \"30px 20px\",\r\n            margin: 5,\r\n            fontSize: 40,\r\n        };\r\n\r\n        const div = {\r\n            position:\"absolute\",\r\n            width: '100%',\r\n            bottom: \"20%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\"\r\n        };\r\n\r\n        return (\r\n            <div style={div}>\r\n                <span style={span}>{this.props.hand[0]}</span>\r\n                <span style={span}>{this.props.hand[1]}</span>\r\n                <span style={span}>{this.props.hand[2]}</span>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Hand);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Cards from './Cards';\r\nimport Table from './Table';\r\nimport '../styles/Game.css'\r\n\r\nexport class Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Cards />\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Game);","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Game from './components/Game';\r\n\r\n\r\nconst Router = () => (\r\n    <div>\r\n        <Switch>\r\n            <Route path='/' component={Game} />\r\n        </Switch>\r\n    </div>\r\n);\r\n\r\nexport default Router;","import React from 'react';\r\nimport Navigation from './components/Navigation';\r\nimport Router from './Router';\r\n\r\nclass Layout extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className = \"container\" >\r\n                <Navigation />\r\n                <Router />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import '/styles/app.css';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { store } from \"./store\";\nimport Layout from \"./Layout\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Layout />\n        </Router>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}